(()=>{"use strict";const t=async({url:t,method:e,data:s})=>{try{const a={GET:{method:"GET"},POST:{method:"POST",body:JSON.stringify(s),headers:{"Content-Type":"application/json"}}},n=await fetch(t,{...a[e]});if(!n.ok)throw n;return{ok:!0,data:await n.json()}}catch(t){const e=`status: ${t.status}${t.statusText?`, statusText: ${t.statusText}`:""}`;return console.error(e),{ok:!1}}};class e{constructor(){this.send=t}getUsers(){return this.send({url:"http://localhost:4545/users"}).then((t=>t))}async getUser(t){let{ok:e,data:s}=await this.getUsers();return s=e?s.filter((e=>e.login===t))[0]:{},{ok:e,data:s}}}const s=async function(t,s){const a=new e,n={};let o;async function c(t,e,s,n){let c,i="";switch(t){case"isRequired":c=async()=>(i=s.message,""===e.trim());break;case"isExist":c=async()=>{const t=await a.getUser(e);return t.ok?(o=t.data,i=s.message.error,void 0===t.data):(i=s.message.serverError,!1)};break;case"isPasswordTrue":c=async()=>o?(i=s.message,o.password!==e):(i="",!0)}if(await c())return i}async function i(e){for(const a of Object.keys(s[e])){const o=await c(a,t[e],s[e][a]);o&&!n[e]&&(n[e]=o)}}return await async function(){for(const e of Object.keys(t))await i(e);return n}()};(async()=>{const t={login:{isRequired:{message:"Логин обязателен для заполнения"}},password:{isRequired:{message:"Пароль обязателен для заполнения"}}},e={login:{isExist:{message:{serverError:"Ошибка соединения с сервером",error:"Данное имя не зарегистрировано"}}},password:{isPasswordTrue:{message:"Не верный пароль"}}},a=(t,e)=>{t.querySelectorAll(".text-warning").forEach((t=>{const{name:s}=t.dataset;t.textContent=e[s]||""}))};document.addEventListener("submit",(async n=>{n.preventDefault();const o=n.target.closest("form");let c=new FormData(o);const i={};c.forEach(((t,e)=>{i[e]=t}));const l=await s(i,t);if(0===Object.keys(l).length){const t=await s(i,e);0===Object.keys(t).length?(a(o,t),document.cookie="isAuthorized=true",window.location.replace("./table.html"),console.log("sendForm")):a(o,t)}else a(o,l)}))})().then();const a=new class{constructor(){this.send=t}getRepairTypes(){return this.send({url:"http://localhost:4545/repairTypes"}).then((t=>t))}async getSomeRepairTypes(t){let{ok:e,data:s}=await this.getRepairTypes();return s=e?s.filter((e=>e.type===t)):{},{ok:e,data:s}}},n=new class extends class{constructor({modalSelector:t,sectionId:e,...s}){this.modalSelector=t,this.modal=document.querySelector(t),e&&(this.section=document.getElementById(e)),this.modal&&this.init(s)}init({bodySelector:t,closeBtnSelector:e,modalLinkSelector:s}){this.body=this.modal.querySelector(t),this.modal.addEventListener("click",(t=>{const{target:s}=t;s.closest(e)&&(this.toggle(!1),this.afterClose())})),document.addEventListener("click",(t=>{const{target:e}=t;e.closest(s)&&(this.toggle(!0),this.afterOpen(e.closest(s))),e.matches(this.modalSelector)&&(this.toggle(!1),this.afterClose())}))}afterOpen(){}afterClose(){}toggle(t,e=null){this.modal.style.visibility=t?"visible":"hidden",t&&this.afterOpen(e)}}{constructor(){super({modalSelector:"#modal",modalLinkSelector:".btn-addItem",bodySelector:".modal",closeBtnSelector:".button__close"}),this.modal.addEventListener("click",this.eventListener.bind(this))}eventListener(t){t.preventDefault();const e=t.target.closest("button");if(e){const{action:t}=e.dataset;"close"===t?this.toggle(!1):"save"===t&&console.log("save")}}afterOpen(t){if(console.log(t),t){const{action:e}=t.dataset;"add"===e?this.actionAdd():"change"===e&&this.actionChange()}}actionAdd(){console.log("add")}actionChange(){console.log("change")}},{pathname:o}=window.location,c="true"===document.cookie.split(";").reduce(((t,e)=>{const[s,a]=e.split("=");return{...t,[s]:a}}),{}).isAuthorized;o.includes("html")&&!o.includes("index.html")&&(c||window.location.replace("./index.html"));const i=t=>{const e=document.getElementById("tbody");e.innerHTML="",t.forEach((t=>{var s;e.insertAdjacentHTML("beforeend",`<tr class="table__row">\n    <td class="table__id table__cell">${(s=t).id}</td>\n    <td class="table-type table__cell">${s.type}</td>\n    <td class="table-name table__cell">\n        ${s.name}\n    </td>\n    <td class="table-units table__cell">\n        ${s.units}\n        </td>\n        <td class="table-cost table__cell">\n        ${s.cost} руб\n    </td>\n    <td>\n    <div class="table__actions table__cell">\n        <button class="button action-change" data-action="change" data-id="${s.id}"><span class="svg_ui"><svg class="action-icon_change"><use xlink:href="./img/sprite.svg#change"></use></svg></span><span>Изменить</span>\n    </button>\n    <button class="button action-remove" data-action="remove" data-id="${s.id}"><span class="svg_ui"><svg class="action-icon_remove"><use xlink:href="./img/sprite.svg#remove"></use></svg></span><span>Удалить</span>\n    </button>\n    </div>\n    </td>\n    </tr>`)}))};let l=document.getElementById("typeItem");c&&(document.getElementById("table").addEventListener("click",(t=>{t.preventDefault();const e=t.target.closest(".action-change, .action-remove");if(e){const{id:t,action:s}=e.dataset;console.log(t,s),"change"===s&&n.toggle(!0,e)}})),(async()=>{const t=await a.getRepairTypes();var e;console.log(t),t.ok&&(e=t.data.reduce(((t,e)=>t.add(e.type)),new Set),l.innerHTML='<option value="Все услуги">Все услуги</option>',[...e].forEach((t=>{l.insertAdjacentHTML("beforeend",`<option value="${t}">${t}</option>`)})),i(t.data),document.addEventListener("change",(({target:t})=>{t.closest("#typeItem")&&(async t=>{console.log("filter");const e="Все услуги"===t?await a.getRepairTypes():await a.getSomeRepairTypes(t);console.log(e),e.ok&&i(e.data)})(t.value)})))})())})();